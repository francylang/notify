// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CLASSROOM should match the Classroom snapshot 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div>
    <div
        className="teacher-and-summary"
    >
        <h2
            className="teacher-name"
        >
            's Classroom
        </h2>
    </div>
    <div
        className="student-classroom-container"
    >
        <div
            className="student-classroom"
        >
            <StudentLink
                deleteStudent={[Function]}
                id={undefined}
                name="Francy Lang"
                studentInfo={
                    Array [
                        Object {
                          "name": "Francy Lang",
                          "parentContact": "Pam Lang",
                          "phone": "5029052136",
                        },
                      ]
                }
                studentValue={undefined}
            />
        </div>
    </div>
</div>,
  "nodes": Array [
    <div>
      <div
            className="teacher-and-summary"
      >
            <h2
                  className="teacher-name"
            >
                  's Classroom
            </h2>
      </div>
      <div
            className="student-classroom-container"
      >
            <div
                  className="student-classroom"
            >
                  <StudentLink
                        deleteStudent={[Function]}
                        id={undefined}
                        name="Francy Lang"
                        studentInfo={
                              Array [
                                    Object {
                                      "name": "Francy Lang",
                                      "parentContact": "Pam Lang",
                                      "phone": "5029052136",
                                    },
                                  ]
                        }
                        studentValue={undefined}
                  />
            </div>
      </div>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <Classroom
        students={
                Array [
                        Object {
                          "name": "Francy Lang",
                          "parentContact": "Pam Lang",
                          "phone": "5029052136",
                        },
                      ]
        }
/>,
      "_debugID": 3,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "students": Array [
            Object {
              "name": "Francy Lang",
              "parentContact": "Pam Lang",
              "phone": "5029052136",
            },
          ],
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 2,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div>
          <div
                    className="teacher-and-summary"
          >
                    <h2
                              className="teacher-name"
                    >
                              's Classroom
                    </h2>
          </div>
          <div
                    className="student-classroom-container"
          >
                    <div
                              className="student-classroom"
                    >
                              <StudentLink
                                        deleteStudent={[Function]}
                                        id={undefined}
                                        name="Francy Lang"
                                        studentInfo={
                                                  Array [
                                                            Object {
                                                              "name": "Francy Lang",
                                                              "parentContact": "Pam Lang",
                                                              "phone": "5029052136",
                                                            },
                                                          ]
                                        }
                                        studentValue={undefined}
                              />
                    </div>
          </div>
</div>,
        "_debugID": 4,
        "_renderedOutput": <div>
          <div
                    className="teacher-and-summary"
          >
                    <h2
                              className="teacher-name"
                    >
                              's Classroom
                    </h2>
          </div>
          <div
                    className="student-classroom-container"
          >
                    <div
                              className="student-classroom"
                    >
                              <StudentLink
                                        deleteStudent={[Function]}
                                        id={undefined}
                                        name="Francy Lang"
                                        studentInfo={
                                                  Array [
                                                            Object {
                                                              "name": "Francy Lang",
                                                              "parentContact": "Pam Lang",
                                                              "phone": "5029052136",
                                                            },
                                                          ]
                                        }
                                        studentValue={undefined}
                              />
                    </div>
          </div>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Classroom
    students={
        Array [
            Object {
              "name": "Francy Lang",
              "parentContact": "Pam Lang",
              "phone": "5029052136",
            },
          ]
    }
/>,
}
`;
