// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<NewStudent /> should match the NewStudent snapshot 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="new-student"
>
    <h2
        className="create-new-student"
    >
        Create New Student
    </h2>
    <form
        className="add-new-student-form"
    >
        <input
            onChange={[Function]}
            placeholder="Student Name"
            type="text"
            value=""
        />
        <input
            onChange={[Function]}
            placeholder="Parent Contact"
            type="text"
            value=""
        />
        <input
            onChange={[Function]}
            placeholder="phone"
            type="text"
            value=""
        />
        <input
            className="form-button"
            disabled={true}
            onClick={[Function]}
            type="submit"
        />
    </form>
</div>,
  "nodes": Array [
    <div
      className="new-student"
>
      <h2
            className="create-new-student"
      >
            Create New Student
      </h2>
      <form
            className="add-new-student-form"
      >
            <input
                  onChange={[Function]}
                  placeholder="Student Name"
                  type="text"
                  value=""
            />
            <input
                  onChange={[Function]}
                  placeholder="Parent Contact"
                  type="text"
                  value=""
            />
            <input
                  onChange={[Function]}
                  placeholder="phone"
                  type="text"
                  value=""
            />
            <input
                  className="form-button"
                  disabled={true}
                  onClick={[Function]}
                  type="submit"
            />
      </form>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <NewStudent
        students={
                Array [
                        Object {
                          "id": 5,
                          "name": "Francy Lang",
                          "parentContact": "Pam Lang",
                          "phone": "5029052136",
                        },
                      ]
        }
/>,
      "_debugID": 3,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": NewStudent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "handleSubmit": [Function],
        "props": Object {
          "students": Array [
            Object {
              "id": 5,
              "name": "Francy Lang",
              "parentContact": "Pam Lang",
              "phone": "5029052136",
            },
          ],
        },
        "refs": Object {},
        "state": Object {
          "id": 1,
          "name": "",
          "parentContact": "",
          "phone": "",
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 2,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="new-student"
>
          <h2
                    className="create-new-student"
          >
                    Create New Student
          </h2>
          <form
                    className="add-new-student-form"
          >
                    <input
                              onChange={[Function]}
                              placeholder="Student Name"
                              type="text"
                              value=""
                    />
                    <input
                              onChange={[Function]}
                              placeholder="Parent Contact"
                              type="text"
                              value=""
                    />
                    <input
                              onChange={[Function]}
                              placeholder="phone"
                              type="text"
                              value=""
                    />
                    <input
                              className="form-button"
                              disabled={true}
                              onClick={[Function]}
                              type="submit"
                    />
          </form>
</div>,
        "_debugID": 4,
        "_renderedOutput": <div
          className="new-student"
>
          <h2
                    className="create-new-student"
          >
                    Create New Student
          </h2>
          <form
                    className="add-new-student-form"
          >
                    <input
                              onChange={[Function]}
                              placeholder="Student Name"
                              type="text"
                              value=""
                    />
                    <input
                              onChange={[Function]}
                              placeholder="Parent Contact"
                              type="text"
                              value=""
                    />
                    <input
                              onChange={[Function]}
                              placeholder="phone"
                              type="text"
                              value=""
                    />
                    <input
                              className="form-button"
                              disabled={true}
                              onClick={[Function]}
                              type="submit"
                    />
          </form>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <NewStudent
    students={
        Array [
            Object {
              "id": 5,
              "name": "Francy Lang",
              "parentContact": "Pam Lang",
              "phone": "5029052136",
            },
          ]
    }
/>,
}
`;
