// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<CoreValue /> should match the CoreValue snapshot 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="character-card undefined"
    onClick={[Function]}
>
    <article
        className="card"
    >
        <h3
            className="core-value"
        />
        <h4
            className="core-value-counter"
        />
    </article>
</div>,
  "nodes": Array [
    <div
      className="character-card undefined"
      onClick={[Function]}
>
      <article
            className="card"
      >
            <h3
                  className="core-value"
            />
            <h4
                  className="core-value-counter"
            />
      </article>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <CoreValue />,
      "_debugID": 3,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {},
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 2,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="character-card undefined"
          onClick={[Function]}
>
          <article
                    className="card"
          >
                    <h3
                              className="core-value"
                    />
                    <h4
                              className="core-value-counter"
                    />
          </article>
</div>,
        "_debugID": 4,
        "_renderedOutput": <div
          className="character-card undefined"
          onClick={[Function]}
>
          <article
                    className="card"
          >
                    <h3
                              className="core-value"
                    />
                    <h4
                              className="core-value-counter"
                    />
          </article>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <CoreValue />,
}
`;
